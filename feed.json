{
    "version": "https://jsonfeed.org/version/1",
    "title": "ECP Studio",
    "description": "",
    "home_page_url": "https://hot7585325.github.io/Publii-Page",
    "feed_url": "https://hot7585325.github.io/Publii-Page/feed.json",
    "user_comment": "",
    "icon": "https://hot7585325.github.io/Publii-Page/media/website/LOGO-2.png",
    "author": {
        "name": "Tanterbooan"
    },
    "items": [
        {
            "id": "https://hot7585325.github.io/Publii-Page/zhe-shi-tou-guo-playcanvaszhi-zuo-de-wang-zhan-2.html",
            "url": "https://hot7585325.github.io/Publii-Page/zhe-shi-tou-guo-playcanvaszhi-zuo-de-wang-zhan-2.html",
            "title": "【PlayCanvas】託管到Github",
            "summary": "要將PlayCanvas託管到Github就像Unity WebGL一樣 ，但PC需要多注意一點，需要在上傳後，額外新增一個檔案 .nojeckyll，這裡Github官方有解釋 簡單來說因為GitHub Pages 預設會啟用 Jekyll 網站生成器，但這會導致以底線 _&hellip;",
            "content_html": "<p>要將PlayCanvas託管到Github就像Unity WebGL一樣  ，但PC需要多注意一點，需要在上傳後，額外新增一個檔案 .nojeckyll，這裡<a href=\"https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/adding-a-theme-to-your-github-pages-site-using-jekyll\">Github官方有解釋 </a></p>\n<p>簡單來說因為GitHub Pages 預設會啟用 <a data-start=\"70\" data-end=\"101\" class=\"\" rel=\"noopener\" target=\"_new\" href=\"https://jekyllrb.com/\">Jekyll</a> 網站生成器，但這會導致以底線 <code data-start=\"156\" data-end=\"159\">_</code> 開頭的資料夾或檔案（如 <code data-start=\"172\" data-end=\"185\">_start__.js</code>）會被 Jekyll 忽略，而PlayCanvas 匯出的某些檔案剛好就是底線開頭，所以部署後會「消失」、「404」，最終會造成網站畫面不完整、空白或失敗載入資源。</p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "Tanterbooan"
            },
            "tags": [
                   "PlayCanvas"
            ],
            "date_published": "2025-06-08T18:18:26+08:00",
            "date_modified": "2025-06-08T18:36:19+08:00"
        },
        {
            "id": "https://hot7585325.github.io/Publii-Page/zhe-shi-tou-guo-playcanvaszhi-zuo-de-wang-zhan.html",
            "url": "https://hot7585325.github.io/Publii-Page/zhe-shi-tou-guo-playcanvaszhi-zuo-de-wang-zhan.html",
            "title": "【PlayCanvas】Demo",
            "summary": "https://hot7585325.github.io/PCWeb/",
            "content_html": "<p><a href=\"https://hot7585325.github.io/PCWeb/\">https://hot7585325.github.io/PCWeb/</a></p>",
            "author": {
                "name": "Tanterbooan"
            },
            "tags": [
                   "PlayCanvas"
            ],
            "date_published": "2025-06-08T18:07:00+08:00",
            "date_modified": "2025-06-08T18:24:34+08:00"
        },
        {
            "id": "https://hot7585325.github.io/Publii-Page/playcanvas-wo-xuan-ze-liao-playcanvas.html",
            "url": "https://hot7585325.github.io/Publii-Page/playcanvas-wo-xuan-ze-liao-playcanvas.html",
            "title": "【PlayCanvas】我選擇了PlayCanvas",
            "summary": "最近在 IG Threads 常常滑到一些超酷的互動網頁，看起來又美又順，我心想：「這些到底是怎麼做的啊？」 上網爬了一下資料，發現現在能做出這種效果的工具，像是： Three.js Babylon.js PlayCanvas Unity WebGL&hellip;",
            "content_html": "<p class=\"align-left\">最近在 IG Threads 常常滑到一些超酷的互動網頁，看起來又美又順，我心想：「這些到底是怎麼做的啊？」<br>上網爬了一下資料，發現現在能做出這種效果的工具，像是：<br><br>Three.js<br>Babylon.js<br>PlayCanvas<br>Unity WebGL<br><br><br>因為自己是 Unity 的開發者，對遊戲引擎比較熟，所以本來有想說：「那就用 Unity WebGL 吧！」<br>但研究了一下發現，它雖然可以輸出到網頁，實際上卻不太適合做這種輕量又能跟 HTML 整合的互動效果。<br>載入慢、不能直接加網頁元素，看起來反而有點卡卡的。<br><br>後來我選擇了 PlayCanvas(因為它也是遊戲引擎~)<br>介面跟 Unity 有點像，應該會比較好上手。雖然我現在還沒真的實作過，但我準備開始研究，也想把學習過程記錄下來。<br><br>如果你也對這種酷酷的網頁互動有興趣，或是跟我一樣是 Unity 開發者，卻想試試不同的工具，歡迎關注我，一起學習 PlayCanvas！</p>",
            "author": {
                "name": "Tanterbooan"
            },
            "tags": [
                   "PlayCanvas"
            ],
            "date_published": "2025-06-08T17:48:23+08:00",
            "date_modified": "2025-06-08T18:25:27+08:00"
        }
    ]
}
